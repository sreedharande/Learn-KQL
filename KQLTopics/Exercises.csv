Tab,,,Section,,,Markdown
Overview,,,Take,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/takeoperator<br/><br/>The take operator returns the number of specified rows. The results are taken at random unless the rows have been sorted prior to the take operator being called.<br/><br/>Example:<br/>SecurityAlert | take 5<br/>
Overview,,,Where,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/whereoperator<br/><br/>The where operator is the most commonly used operator within KQL. The where operator is used within every Kusto query. The where operator is used for filtering results based on specified criteria. This operator can be used with many other operators, such as equality oeprators, string operators, time based operators, and more.<br/><br/>Example:<br/>where count_ < 100<br/>where Computer contains 'desktop'<br/>where TimeGenerated < ago(1h)<br/>
Overview,,,Summarize,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/summarizeoperator<br/><br/>The summarize operator is used to aggregate the content of a table based on the listed column or columns. This is most useful when looking to cut down on the results shown while summarizing the columns of interest. Summarize can be used by itself or with other aggregaters such as count(), arg_max(), arg_min(), or avg(). Using multiple columns allows for stronger combinations within the results.<br/>Example:<br/>summarize count() by Title, ProviderName summarize arg_max(TimeGenerated, Computer)<br/>
Overview,,,Project,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/projectoperator<br/><br/>The project-away operator does a similar function as project. Project-away removes the unwanted columns from the full list of columns in the results. This operator should be used when looking to take away columns from a large list as it is more efficient than using project and listing several columns.<br/><br/>Example:<br/><br/>Project-away Process, AgentID, MachineID, ResourceID<br/>
Overview,,,ProjectAway,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/projectawayoperator<br/><br/>The project-away operator does a similar function as project. Project-away removes the unwanted columns from the full list of columns in the results. This operator should be used when looking to take away columns from a large list as it is more efficient than using project and listing several columns.<br/><br/>Example:<br/><br/>Project-away Process, AgentID, MachineID, ResourceID<br/>
Overview,,,Contains/Has,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/datatypes-string-operators<br/><br/>The contains and has operators take a string and filters the logs based on the string. Contains and has are not case sensitive.<br/><br/>Example:<br/><br/>OfficeActivity | where OfficeWorkload contains 'exchange'<br/><br/>SecurityAlert | where AlertProvider has 'ASI'<br/>
Scalar,,,Ago,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/agofunction<br/><br/>The ago operator takes the current time and subtracts the specified amount of time from it. The time subtracted can be done in seconds (s), minutes (m), hours (h), and days (d).<br/><br/>ago should be used after using equality operators such as >, <, >=, <=.<br/><br/>Example:<br/><br/>where TimeGenerated < ago(1h)<br/>
Scalar,,,Between,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/betweenoperator<br/><br/>The between operator matches the input that is inside the inclusive range.<br/><br/>Example:<br/><br/>SecurityAlert | where TimeGenerated between (datetime(05/05/2021 00:00:00) .. datetime(05/07/2021 00:00:00))<br/>
Scalar,,,Case,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/casefunction<br/><br/>The case operator evaluates a list of items and returns the first result when the item is satisfied. If none of the items are true, the result of the last item is returned. Case can be seen as a list of if/else statements that runs a check on each item to see if they are true. If not, return the default else value.<br/><br/>Example:<br/><br/>extend Variable = case( Size <= 3, "Small", Size <= 10, "Medium", "Large")<br/>
Scalar,,,Datetime,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/scalar-data-types/datetime<br/><br/>The datetime operator represents an instant in time, typically expressed as a date and time of day. Values range in 00:00:00 (midnight) through 11:59:59 PM.<br/><br/>Example:<br/><br/> 01:23:45 (1 AM 23 minutes and 45 seconds), between(datetime(01/02/2021 00:00:00) .. datetime(01/04/2021 23:59:59)))<br/n>
Scalar,,,Iff,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ifffunction<br/><br/>The iff operator evaluates the first argument and returns the value of either the second or last argument depending on which item is true. If true, the second option is returned. If false, the third option is returned.<br/><br/>Example:<br/><br/>Heartbeat | extend day = iff(OSType == "Windows", "It's Windows!", "It's not Windows!")<br/>
Scalar,,,Parse,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/parseoperator<br/><br/>The parse operator evaluates a string expression and parses its value into one or more calculated columns. The columns will have nulls, for unsuccessfully parsed strings. If there is no need to use rows where parsing doesn't succeed, use the parse-where operator.<br/><br/>Syntax: T | parse [kind=regex [flags=regex_flags] |simple|relaxed] Expression with *<br/><br/>Arguments:<br/><br/>T is the input table. kind: simple (the default): StringConstant is a regular string value and the match is strict. All string delimiters should appear in the parsed string, and all extended columns must match the required types.<br/><br/>regex: StringConstant may be a regular expression and the match is strict. All string delimiters, which can be a regex for this mode, should appear in the parsed string, and all extended columns must match the required types.<br/><br/>flags: Flags to be used in regex mode like U (Ungreedy), m (multi-line mode), s (match new line \n), i (case-insensitive) in RE2 flags.<br/><br/>relaxed: StringConstant is a regular string value and the match is relaxed. All string delimiters should appear in the parsed string, but extended columns may partially match the required types.<br/>
Scalar,,,Sort,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/sortoperator<br/><br/>The sort operator sorts the rows of the input table in order by one or more columns.<br/>Example:<br/><br/>SecurtiyEvent | where eventID == '4624' | sort by TimeGenerated desc<br/>
Scalar,,,ToDyanmic,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/parsejsonfunction<br/><br/>The todynamic() operator interprets a string as a JSON value and returns the value as dynamic. Works simililarly as the parse_json operator.<br/><br/>Example:<br/><br/>extend Variable = parse_json(nestedJsonItem), extend Variable = todynamic(nestedJsonItem)<br/>
Advanced,,,Arg_max,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/arg-max-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/arg-max-aggfunction<br/><br/>The arg_max operator finds a row in a group that maximizes a specified expresison and returns the value of the expression to return.<br/>Example: summarize [(NameExprToMaximize , NameExprToReturn [, ...] )=] arg_max (ExprToMaximize, * | ExprToReturn [, ...])<br/><br/>ExprToMaximize: Expression that will be used for aggregation calculation. ExprToReturn: Expression that will be used for returning the value when ExprToMaximize is maximum. Expression to return may be a wildcard (*) to return all columns of the input table. NameExprToMaximize: An optional name for the result column representing ExprToMaximize. NameExprToReturn: Additional optional names for the result columns representing ExprToReturn.
Advanced,,,Arg_min,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/arg-min-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/arg-min-aggfunction<br/><br/>The arg_min operator finds a row in a group that maximizes a specified expresison and returns the value of the expression to return.<br/>Example: summarize [(NameExprToMinimize , NameExprToReturn [, ...] )=] arg_min (ExprToMinimize, * | ExprToReturn [, ...])<br/><br/>ExprToMinimize: Expression that will be used for aggregation calculation. ExprToReturn: Expression that will be used for returning the value when ExprToMinimize is minimum. Expression to return may be a wildcard (*) to return all columns of the input table. NameExprToMinimize: An optional name for the result column representing ExprToMinimize. NameExprToReturn: Additional optional names for the result columns representing ExprToReturn.
Advanced,,,Dcount/Dcountif,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/dcount-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/dcountif-aggfunction<br/n><br/>The dcount operator returns an estimate for the number of distinct values that are taken by a scalar expression in a summary group.<br/>Example: PageViewLog | summarize countries=dcount(country) by continent<br/><br/>The dcountif operator returns an estimate of the number of distinct values of expression of rows for which the body evaluates to true.<br/><br/>Example:<br/><br/>PageViewLog | summarize countries=dcountif(country, country startswith "United") by continent<br/>
Advanced,,,Max/Min,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/max-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/min-aggfunction<br/><br/>The max operator returns the maximum value across a group.<br/><br/>Example:<br/><br/>summarize max(Expr)<br/><br/>The min operator returns the minumum value across a group.<br/><br/>Example: summarize min(Expr)<br/><br/>
Advanced,,,Dcount/Dcountif,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/dcount-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/dcountif-aggfunction<br/><br/>The dcount operator returns an estimate for the number of distinct values that are taken by a scalar expression in a summary group.<br/><br/>Example: PageViewLog | summarize countries=dcount(country) by continent<br/><br/>The dcountif operator returns an estimate of the number of distinct values of expression of rows for which the body evaluates to true.<br/><br/>Example: ageViewLog | summarize countries=dcountif(country, country startswith "United") by continent<br/>
Advanced,,,Max/Min,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/max-aggfunction, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/min-aggfunction<br/><br/>The max operator returns the maximum value across a group.<br/><br/>Example: summarize max(Expr)<br/><br/>The min operator returns the minumum value across a group.<br/><br/>Example: summarize min(Expr)<br/>
Advanced,,,Mvexpand,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/mvexpandoperator<br/><br/>The mv-expand operator expands a dynamic list of items into multiple records. These dynamic lists will appear as nested JSON lists that have not been seperated. The result of this call will separate the items from the lsit into individual rows.<br/><br/>Example:<br/><br/>IdentityInfo | extend Roles = mvexpand(Permissions)<br/>
Dataset,,,Datatable,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/datatableoperator?pivots=azuremonitor<br/><br/>The datetime operator takes a configuration in as input and returns a table based on the configuration. The configuration consists the name of the column and the format of the data that the column will contain.<br/><br/>Example:<br/><br/> datatable (Date:datetime, Event:string) [datetime(1910-06-11), "Born", datetime(1930-01-01), "Enters Ecole Navale", datetime(1953-01-01), "Published first book", datetime(1997-06-25), "Died"]<br/>
Dataset,,,Join,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/joinoperator?pivots=azuremonitor<br/><br/>The join operator mergres the rows of two tables to form a new table by matching the specified values.<br/><br/>Example: Table1 | join (Table2) on CommonColumn, $left.Col1 == $right.Col2<br/><br/>There are several types of joins:<br/><br/>kind=leftanti, kind=leftsemi The result table contains columns from the left side only.<br/><br/>kind=rightanti, kind=rightsemi The result table contains columns from the right side only.<br/><br/>kind=innerunique, kind=inner, kind=leftouter, kind=rightouter, kind=fullouter A column for every column in each of the two tables, including the matching keys. The columns of the right side will be automatically renamed if there are name clashes.<br/>
Dataset,,,Let/Extend,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/letstatement, https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/extendoperator<br/><br/>The let operator binds names to expressions. Let allows for users to establish variables with static values or even take on the results of a query. Let is defined before the main body of the query.<br/><br/>Example: let start_time = ago(5h); let end_time = start_time + 2h; T | where Time > start_time and Time < end_time<br/><br/>let IPAddresses = SigninLogs | summarize by IPAddress; SecurityAlert | where todynamic(Entities) in IPAddresses<br/><br/>The Extend operator creates a variable and column within the body of the query. The variable created can take on the value of another column or take on a static value. Extend is also used for iff, case, and other operators.<br/><br/>Example: extend duration = endTime - startTime<br/>
Dataset,,,Union,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/unionoperator?pivots=azuremonitor<br/><br/>The union operator takes two or more tables and returns the rows of them all in a stacked fashion.<br/><br/>Example:<br/><br/>Table1 | union Table2, Table3<br/>
External,,,ExternalData,,,Documentation: https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/externaldata-operator?pivots=azuremonitor<br/><br/>The externaldata operator allows for queries to refernce data that is stored outside of the workspace. The most common use case for this operator is to call on data that is being stored within an Azure Storage Account blob. API endpoints can also be called from within the query.<br/><br/>Externaldata requires that a user tells the query the structure of the data that will be brought in as well as the column names. That would appear as so: (Firstcolumn: int, Secondcolumn: string, Thirdcolumn: real). When pulling data from a blob, a SAS token will need to be generated in order for the query to access the data.<br/><br/>Example:<br/><br/>let ExternalTable = externaldata(Device: string, Version: real, User: string) [@'STORAGE BLOB SAS TOKEN"] with (format=json)<br/>